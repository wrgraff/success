.steps {
	counter-reset: steps;
	padding: 0;
	list-style: none;
}

.steps__item {
	position: relative;
	counter-increment: steps;

	display: flex;
	flex-direction: column;
	padding: $bit * 4;
	background-color: color(primary);

	@media (max-width: map-get($breakpoints, small)) {
		&:not(:last-child) {
			margin-bottom: 10px;
		}
	}

	> * {
		position: relative;
	}
	&:hover,
	&:focus-within {
		& > * {
			z-index: 3;
		}
	}

	&::before {
		content: counter(steps) '.';

		position: relative;
		z-index: 3;

		display: block;
		margin-bottom: 44px;

		font-size: 100px;
		font-weight: 900;
		line-height: .6;

		@media (min-width: map-get($breakpoints, medium)) {
			font-size: 200px;
		}
	}

	@media (min-width: map-get($breakpoints, medium)) {
		&::after {
			content: '';
			position: absolute;
			top: 0;
			right: 0;
			bottom: $bit * -5;
			left: 0;

			background-color: color(white);
			box-shadow: 0 0 40px rgba(163, 163, 163, 0.5);
			opacity: 0;

			transition: opacity 200ms, transform 200ms;
			animation-name: fade-backward;
			animation-duration: 200ms;
			animation-fill-mode: forwards;
		}

		&:hover,
		&:focus-within {
			outline: none;
			&::after {
				animation-name: fade-forward;
				opacity: 1;
				transform: scale(1.2);
			}
		}
	}
}

.steps__heading {
	font-weight: 700;
}

.steps__text {
	@media (min-width: map-get($breakpoints, medium)) {
		margin-bottom: 0;
	}

	a {
		color: color(black);
		border-bottom: none;
		white-space: nowrap;
	}
}

.steps__button {
	margin-top: auto;

	@media (min-width: map-get($breakpoints, medium)) {
		position: absolute;
		left: 50%;
		bottom: $bit * -2;

		min-width: 244px;
		opacity: 0;

		transform: translate(-50%, 0);
		transition: background-color 200ms, opacity 200ms, transform 200ms;

		.steps__item:hover &,
		.steps__item:focus-within & {
			opacity: 1;

			transform: translate(-50%, ($bit * 4));
		}
	}
}
